@using X.PagedList.Mvc.Core

@model PaginatedList<IPGManager.Models.Funcionario>

    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
}

<h1>Funcionários</h1>

<p>
    <a asp-action="Create">Criar Novo</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" placeholder="Pesquisar..." name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nome</a>

            </th>
            <th>
                Contacto
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Data de Nascimento</a>
            </th>
            <th>
                Género
            </th>
            <th>
                Cargo
            </th>
            <th>
                Departamento
            </th>
            <th>
                Horário
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contacto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genero)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cargo.Descricao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departamento.NomeDepartamento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HorarioId)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.FuncionarioId">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.FuncionarioId">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.FuncionarioId">Apagar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Seguinte
</a>
