
@using X.PagedList.Mvc.Core

@model PaginatedList<IPGManager.Models.Professor>



<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="~/lib/font-awesome/css/fontawesome.css" />
<link rel="stylesheet" href="~/lib/font-awesome/css/solid.css" />

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Professores</h1>
@if (User.IsInRole("manager") || User.IsInRole("admin"))
{
    <p>
        <a asp-action="Create" class="btn btn-light"data-toggle="tooltip" title="Criar Novo"><i class="fas fa-user-plus"></i></a>
    </p>
}
else
{
}
@using (Html.BeginForm())
{

    <div>

    </div>


    <p>
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Pesquisar por nome" />

        <button type="submit" class="btn btn-light"><i class="fa fa-search"></i></button>
        <a asp-action="Index" class="btn btn-light" data-toggle="tooltip" title="Voltar à Lista Completa"><i class="fas fa-chevron-left"></i></a>
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown"> <span class="caret"></span><i class="fas fa-filter"></i> </button>

            <ul class="dropdown-menu">
                @foreach (var item in ViewBag.DepartamentoID)
                {
                <li> @item =>item.DepartamentoID  </li>
                }
            </ul>
            </div>
</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nome</a>

            </th>

            <th>
                Contacto
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Data de Nascimento</a>
            </th>
            </th>
            <th>
                Género
            </th>
            <th>
                Departamento
            </th>
            <th></th>
        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Contacto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genero.GeneroTipo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departamento.NomeDepartamento)
                </td>
                @if (User.IsInRole("admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ProfessorId">Editar</a> |
                        <a asp-action="Details" asp-route-id="@item.ProfessorId">Detalhes</a> |
                        <a asp-action="Delete" asp-route-id="@item.ProfessorId">Apagar</a>
                    </td>
                }
                else { }
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
